{"version":3,"sources":["constants/data.js","components/TableStyles.jsx","components/PriceList.jsx","contexts/ordersContext.js","components/ButtonStyles.jsx","components/InputStyles.jsx","components/RequestBill.jsx","components/NewOrder.jsx","components/InfoMessageStyles.jsx","components/OrderDetails.jsx","components/Orders.jsx","App.js","reportWebVitals.js","index.js","utils/formatDate.js"],"names":["beersList","name","price","Table","styled","table","TableRow","tr","TableHead","th","TableData","td","TableHeadCaption","TableDataItem","PriceList","map","beer","i","toFixed","OrdersContext","createContext","button","InputStyles","input","NumberOfPeopleInput","BillSplit","span","RequestBill","onGoBack","order","useState","noOfPoeple","setNoOfPeople","items","item","qty","totalAmount","placeholder","value","isNaN","onChange","e","target","parseInt","ButtonStyles","onClick","VIEWS","QtyInput","NewOrder","onAddOrder","totalOrders","view","setView","setItems","getBeersNotInUse","currentBeerName","filter","find","getCurrentOrder","_orderedAt","Date","_items","_totalAmount","reduce","amount","orderId","orderedAt","beerName","className","newItems","slice","_beer","handleBeerChange","disabled","j","handleQtyChange","includes","length","every","div","OrderDetails","onAddItemToOrder","newItem","setNewItem","addingItem","setAddingItem","formatDate","Fragment","ORDERS","NEW_ORDER","ORDER_DETAILS","Orders","ORDER","orderDetails","setOrderDetails","renderOrderRow","orders","parseFloat","Consumer","addOrder","addItemToOrder","InfoMessageStyles","TABS","rawOrdersState","localStorage","getItem","ordersState","JSON","parse","error","TabsWrapper","TabsHeader","TabsButton","TabsContent","App","activeTab","setActiveTab","setOrders","Provider","newOrders","setItem","stringify","push","renderTabContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports","date","d","getDate","m","getMonth","y","getFullYear"],"mappings":"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","file":"static/js/main.6dbec7d2.chunk.js","sourcesContent":["export const beersList = [\n    {\n        name: 'Lager',\n        price: 45.00,\n    },\n    {\n        name: 'IPA',\n        price: 52.00,\n    },\n    {\n        name: 'Weissbier',\n        price: 59.00,\n    }\n];","import styled from 'styled-components';\n\nexport const Table = styled.table`\n  border-collapse: collapse;\n  width: 100%;\n`;\nexport const TableRow = styled.tr``;\n\nexport const TableHead = styled.th`\n  border: 1px solid #ddd;\n  padding: 8px;\n  text-align: left;\n  color: white;\n`;\n\nexport const TableData = styled.td`\n  border: 1px solid #ddd;\n  padding: 8px;\n\n  &.item, &.orderedAt, &.orderAmount, &.qty {\n      width:50%;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { beersList } from '../constants/data';\nimport {Table, TableRow,TableHead, TableData} from './TableStyles'\n\nfunction PriceList() {\n  const renderBeerRow = () =>\n    beersList.map((beer, i) => (\n      <TableRow key={i}>\n        <TableDataItem>{beer.name}</TableDataItem>\n        <TableDataItem>DKK {(beer.price).toFixed(2)}</TableDataItem>\n      </TableRow>\n    ));\n  return (\n    <Table>\n      <TableRow>\n        <TableHeadCaption>Beer</TableHeadCaption>\n        <TableHeadCaption>Price</TableHeadCaption>\n      </TableRow>\n\n      {renderBeerRow()}\n    </Table>\n  );\n}\n\nconst TableHeadCaption = styled(TableHead)`\n    width:50%;\n`;\n\nconst TableDataItem = styled(TableData)`\n  width:50%;\n`;\n\nexport default PriceList;\n","import { createContext } from 'react';\n\nconst OrdersContext = createContext({});\n\nexport default OrdersContext;","import styled from 'styled-components'\n\nexport default styled.button`\nbackground: #ddd;\nborder: 1px solid #0d1117;\ncursor: pointer;\npadding: .25em .5em;\nmargin-right: 1em;\nmargin-bottom: .5em;\ncolor: #0d1117;\n\n&:disabled {\n    opacity: 0.5;\n    cursor:not-allowed;\n}\n`\n","import styled from 'styled-components'\n\nexport const InputStyles = styled.input`\npadding: 0.25em 0.5em;\nborder: 1px solid #ccc;\nbackground-color:#242f40;\ncolor: #ccc;\n`\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport ButtonStyles from './ButtonStyles';\nimport { InputStyles } from './InputStyles';\nimport { Table, TableRow, TableHead, TableData } from './TableStyles';\n\nfunction RequestBill({ onGoBack, order }) {\n  const [noOfPoeple, setNoOfPeople] = useState(null);\n  const handleNoOfPeopleChange = (e) => {\n    setNoOfPeople(e.target.value);\n  };\n  const handleBackClick = () => {\n    onGoBack();\n  };\n\n  const renderItemsRows = () =>\n    order.items.map((item, i) => (\n      <TableRow>\n        <TableData>{i + 1}</TableData>\n        <TableData>{item.name}</TableData>\n        <TableData>DKK {item.price.toFixed(2)}</TableData>\n        <TableData>{item.qty}</TableData>\n      </TableRow>\n    ));\n  return (\n    <div>\n      <Table>\n        <TableRow>\n          <TableHead>#</TableHead>\n          <TableHead>Beer</TableHead>\n          <TableHead>Price</TableHead>\n          <TableHead>Qty</TableHead>\n        </TableRow>\n        {renderItemsRows()}\n      </Table>\n      <br />\n      <div>Total Amount: DKK {order.totalAmount.toFixed(2)}</div>\n      <br />\n\n      {order.totalAmount > 0 && (\n        <div>\n          <BillSplit>Would you like to divide bill?</BillSplit>\n          <NumberOfPeopleInput\n            placeholder=\"# of people\"\n            value={!isNaN(noOfPoeple) ? noOfPoeple : ''}\n            onChange={handleNoOfPeopleChange}\n          />\n          {!isNaN(noOfPoeple) && noOfPoeple > 1\n            ? `DKK${(order.totalAmount / parseInt(noOfPoeple)).toFixed(2)}/person`\n            : ''}\n        </div>\n      )}\n      <br />\n\n      <div>\n        <ButtonStyles onClick={handleBackClick}>Go Back to Order</ButtonStyles>\n      </div>\n    </div>\n  );\n}\nconst NumberOfPeopleInput = styled(InputStyles)`\n  width: 100px;\n`;\n\nconst BillSplit = styled.span`\n  padding-right: 10px;\n`\nexport default RequestBill;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { beersList } from '../constants/data';\nimport ButtonStyles from './ButtonStyles';\nimport RequestBill from './RequestBill';\nimport { Table, TableRow, TableHead, TableData } from './TableStyles';\n\nconst VIEWS = {\n  NEW_ORDER: 'NEW_ORDER',\n  REQUEST_BILL: 'REQUEST_BILL',\n};\n\nfunction NewOrder({ onAddOrder, totalOrders }) {\n  const [view, setView] = useState([null]);\n  const [items, setItems] = useState([null]);\n\n  const handleItemAdd = () => {\n    setItems([...items, null]);\n  };\n\n  const handleBeerChange = (i, beerName) => {\n    debugger;\n    const newItems = items.slice();\n    const beer = beersList.find((_beer) => _beer.name === beerName);\n\n    newItems[i] = { ...beer, qty: newItems[i] ? parseInt(newItems[i].qty) : 1 };\n    setItems(newItems);\n  };\n  const handleQtyChange = (i, qty) => {\n    const newItems = items.slice();\n    const beer = newItems[i];\n    if (beer) {\n      newItems[i] = { ...beer, qty: parseInt(qty) };\n      setItems(newItems);\n    }\n  };\n\n  const getBeersNotInUse = (currentBeerName) => {\n    return beersList.filter(beer => {\n      const beerExists = items.find(item => item && item.name === beer.name);\n      if(!beerExists || beer.name === currentBeerName) {\n        return true;\n      }\n      return false;\n    })\n  }\n\n  const getCurrentOrder = () => {\n    const _orderedAt = new Date();\n    const _items = items.filter((item) => item);\n    const _totalAmount = _items.reduce(\n      (amount, order) => order.qty * order.price + amount,\n      0\n    );\n\n    return {\n      orderId: totalOrders,\n      orderedAt: _orderedAt,\n      items: _items,\n      totalAmount: _totalAmount,\n    };\n\n  }\n  const handleOrderSubmit = () => {\n    onAddOrder(getCurrentOrder());\n  };\n\n  const handleRequestBillClick = () => {\n    setView(VIEWS.REQUEST_BILL);\n  };\n\n\n  const handleRequestBillBack = () => {\n    setView(VIEWS.NEW_ORDER);\n  };\n\n  const renderBeerRow = () =>\n    items.map((beerName, i) => (\n      <TableRow key={i}>\n        <TableData className=\"serialNo\">{i + 1}</TableData>\n        <TableData className=\"item\">\n          <select\n            onChange={(e) => handleBeerChange(i, e.target.value)}\n            value={items[i] ? items[i].name : ''}\n          >\n            {beerName === null && (\n              <option value=\"\" disabled>\n                --Select Beer Type--\n              </option>\n            )}\n            {getBeersNotInUse(items[i] && items[i].name).map((beer, j) => (\n              <option key={j} value={beer.name}>\n                {beer.name}\n              </option>\n            ))}\n          </select>\n        </TableData>\n        <TableData className=\"qty\">\n          <QtyInput\n          disabled={!items[i]}\n            onChange={(e) => handleQtyChange(i, e.target.value)}\n            value={items[i] && !isNaN(items[i].qty) ? items[i].qty : ''}\n          />\n        </TableData>\n      </TableRow>\n    ));\n\n  return view === VIEWS.REQUEST_BILL ? (\n    <RequestBill onGoBack={handleRequestBillBack} order={getCurrentOrder()} />\n  ) : (\n    <div>\n      <Table>\n        <TableRow>\n          <TableHead>#</TableHead>\n          <TableHead>Beer Type</TableHead>\n          <TableHead>Qty</TableHead>\n        </TableRow>\n\n        {renderBeerRow()}\n      </Table>\n      <br />\n      <div>\n        <ButtonStyles onClick={handleItemAdd} disabled={items.includes(null) || getBeersNotInUse().length === 0}>\n          Add Item\n        </ButtonStyles>\n      </div>\n      <br />\n\n      <div>\n        <ButtonStyles\n          onClick={handleOrderSubmit}\n          disabled={items.every((item) => item === null)}\n        >\n          Submit Order\n        </ButtonStyles>\n\n        <ButtonStyles onClick={handleRequestBillClick}>Request Bill</ButtonStyles>\n      </div>\n    </div>\n  );\n}\n\nexport const QtyInput = styled.input`\n  text-align: center;\n  width: 35px;\n`;\n\nexport default NewOrder;\n","import styled from 'styled-components'\n\nexport default styled.div`\nborder: 1px solid #ddd;\ncursor: pointer;\npadding: 0.5em 0.75em;\ncolor: #ddd;\nmargin: 4px 0;\n`\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport formatDate from '../utils/formatDate';\nimport ButtonStyles from './ButtonStyles';\n// import { Input } from './InputStyles';\nimport { Table, TableRow, TableHead, TableData } from './TableStyles';\nimport { beersList } from '../constants/data';\nfunction OrderDetails({ onGoBack, order, onAddItemToOrder }) {\n\n  const [newItem, setNewItem] = useState(null);\n  const [addingItem, setAddingItem] = useState(false);\n\n  const handleBackClick = () => {\n    onGoBack();\n  };\n\n  const handleItemAdd = () => {\n    setAddingItem(true);\n  }\n  \n  const handleItemSave = () => {\n    debugger;\n    const beer = getBeersNotInUse().find(item => item.name === newItem.name);\n    onAddItemToOrder(order.orderId,{\n      ...beer,\n      qty: newItem.qty\n    });\n    setNewItem(null);\n    setAddingItem(false);\n  }\n  \n  const handleBeerChange = (beerName) => {\n    const item = {...newItem};\n    item.name = beerName;\n    if(!item.qty) item.qty = 1;\n    setNewItem(item);\n  }\n  const handleQtyChange = (qty) => {\n    const item = {...newItem};\n    item.qty =  parseInt(qty);\n    setNewItem(item);\n  }\n\n  \n  const getBeersNotInUse = (currentBeerName) => {\n    return beersList.filter(beer => {\n      const beerExists = order.items.find(item => item && item.name === beer.name);\n      if(!beerExists || beer.name === currentBeerName) {\n        return true;\n      }\n      return false;\n    })\n  }\n  \n\n  const renderItemsRows = () =>\n    order.items.map((item, i) => (\n      <TableRow key={i}>\n        <TableData>{i + 1}</TableData>\n        <TableData>{item.name}</TableData>\n        <TableData>${item.price.toFixed(2)}</TableData>\n        <TableData>{item.qty}</TableData>\n      </TableRow>\n    ));\n  return (\n    <div>\n      <Table>\n        <TableRow>\n          <TableHead>#</TableHead>\n          <TableHead>Beer</TableHead>\n          <TableHead>Price</TableHead>\n          <TableHead>Qty</TableHead>\n        </TableRow>\n        {renderItemsRows()}\n      </Table>\n\n      <br />\n      <div>Order Date: {formatDate(order.orderedAt)}</div>\n      <br />\n      <div>Total Amount: ${order.totalAmount.toFixed(2)}</div>\n      <br />\n      { addingItem && (<React.Fragment>\n      <Table>\n       <TableRow>\n          <TableHead>Beer</TableHead>\n          <TableHead>Qty</TableHead>\n        </TableRow>\n        <TableRow>\n          <TableData className=\"item\">\n            <select\n              onChange={(e) => handleBeerChange(e.target.value)}\n              value={newItem ? newItem.name : ''}\n            >\n                <option value=\"\" disabled>\n                  --Select Beer Type--\n                </option>\n              {getBeersNotInUse(newItem && newItem.name).map((beer, j) => (\n                <option key={j} value={beer.name}>\n                  {beer.name}\n                </option>\n              ))}\n            </select>\n          </TableData>\n          <TableData className=\"qty\">\n            <QtyInput\n            disabled={!newItem}\n              onChange={(e) => handleQtyChange(e.target.value)}\n              value={newItem && !isNaN(newItem.qty) ? newItem.qty : ''}\n            />\n          </TableData>\n        </TableRow>\n      </Table>\n      <ButtonStyles onClick={handleItemSave}>\n          Save Item\n      </ButtonStyles>\n      </React.Fragment>)}\n\n      {!addingItem && getBeersNotInUse().length > 0 && <div>\n        <ButtonStyles onClick={handleItemAdd}>\n          Add Item\n        </ButtonStyles>\n      </div>}\n\n      <br />\n      <div>\n        <ButtonStyles onClick={handleBackClick}>Go Back to Order</ButtonStyles>\n      </div>\n    </div>\n  );\n}\n\n\nexport const QtyInput = styled.input`\n  text-align: center;\n  width: 35px;\n`;\n\nexport default OrderDetails;\n","import React, { useState } from 'react';\nimport { Table, TableRow, TableHead, TableData } from './TableStyles';\nimport OrdersContext from '../contexts/ordersContext';\nimport NewOrder from '../components/NewOrder';\nimport ButtonStyles from '../components/ButtonStyles';\nimport InfoMessageStyles from './InfoMessageStyles';\nimport formatDate from '../utils/formatDate';\nimport OrderDetails from './OrderDetails';\n\nconst VIEWS = {\n  ORDERS: 'ORDERS',\n  NEW_ORDER: 'NEW_ORDER',\n  ORDER_DETAILS: 'ORDER_DETAILS',\n};\n\nfunction Orders() {\n  const [view, setView] = useState(VIEWS.ORDER);\n  const [orderDetails, setOrderDetails] = useState(null);\n\n\n  const renderOrderRow = (orders) =>\n    orders.map((order, i) => (\n      <TableRow key={i}>\n        <TableData className=\"serialNo\">{i + 1}</TableData>\n        <TableData className=\"orderedAt\">{formatDate(order.orderedAt)}</TableData>\n        <TableData className=\"orderAmount\">$ {(parseFloat(order.totalAmount)).toFixed(2)}</TableData>\n        <TableData className=\"viewOrder\">\n        <ButtonStyles onClick={() => {\n          setOrderDetails(order);\n          setView(VIEWS.ORDER_DETAILS);\n        }}>\n                View\n              </ButtonStyles>\n        </TableData>\n      </TableRow>\n    ));\n\n  return (\n    <OrdersContext.Consumer>\n      {({ orders, addOrder, addItemToOrder }) =>\n        view === VIEWS.NEW_ORDER ? (\n          <React.Fragment>\n            <NewOrder\n              onAddOrder={(order) => {\n                addOrder(order);\n                setView(VIEWS.ORDERS);\n              }}\n              totalOrders={orders.length}\n            />\n          </React.Fragment>\n        ) : view === VIEWS.ORDER_DETAILS ? (\n          <OrderDetails onGoBack={() => setView(VIEWS.ORDERS)} onAddItemToOrder={addItemToOrder} order={orderDetails} />\n        ) : (\n          <React.Fragment>\n            {orders.length ? (<Table>\n              <TableRow>\n                <TableHead>#</TableHead>\n                <TableHead>Ordered At</TableHead>\n                <TableHead>Order Amount</TableHead>\n                <TableHead>Details</TableHead>\n              </TableRow>\n\n              {renderOrderRow(orders)}\n            </Table>) : <InfoMessageStyles>No orders, please add new order</InfoMessageStyles>}\n            <div>\n              <br />\n              <ButtonStyles onClick={() => setView(VIEWS.NEW_ORDER)}>\n                Add New Order\n              </ButtonStyles>\n            </div>\n          </React.Fragment>\n        )\n      }\n    </OrdersContext.Consumer>\n  );\n}\n\n\nexport default Orders;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport './App.css';\nimport PriceList from './components/PriceList';\nimport Orders from './components/Orders';\nimport OrdersContext from './contexts/ordersContext';\n\nconst TABS = {\n  BEERS_PRICE_LIST: 'BEERS_PRICE_LIST',\n  ORDERS: 'ORDERS',\n};\n\nconst rawOrdersState = localStorage.getItem('ORDERS');\nlet ordersState = [];\nif (rawOrdersState) {\n  try {\n    ordersState = JSON.parse(rawOrdersState);\n  } catch (error) {}\n}\n\nfunction App() {\n  const [activeTab, setActiveTab] = useState(TABS.ORDERS); // TABS.BEARS_PRICE_LIST, TABS.NEW_ROUND_OF_DRINKS\n  const [orders, setOrders] = useState(ordersState);\n\n  const addOrder = (order) => {\n    const newOrders = [...orders, order];\n    setOrders(newOrders);\n\n    localStorage.setItem('ORDERS', JSON.stringify(newOrders));\n  };\n\n  const addItemToOrder = (orderId, item) => {\n    debugger;\n    const newOrders = [...orders];\n    const order = newOrders.find(order => order.orderId === orderId);\n    if(!order) return;\n\n    order.items.push(item);\n    order.totalAmount += item.qty * item.price;\n    setOrders(newOrders);\n    localStorage.setItem('ORDERS', JSON.stringify(newOrders));\n  }\n\n  const renderTabButtons = () => (\n    <React.Fragment>\n      <TabsButton\n        className={activeTab === TABS.BEERS_PRICE_LIST && 'active'}\n        onClick={() => setActiveTab(TABS.BEERS_PRICE_LIST)}\n      >\n        Beers Price List\n      </TabsButton>\n      <TabsButton\n        className={activeTab === TABS.ORDERS && 'active'}\n        onClick={() => setActiveTab(TABS.ORDERS)}\n      >\n        Orders\n      </TabsButton>\n    </React.Fragment>\n  );\n\n  const renderTabContent = () => {\n    switch (activeTab) {\n      case TABS.BEERS_PRICE_LIST:\n        return <PriceList />;\n\n      case TABS.ORDERS:\n        return <Orders />;\n\n      default:\n        return null;\n    }\n  };\n  return (\n    <div className=\"App\">\n      <OrdersContext.Provider\n        value={{\n          orders,\n          addOrder,\n          addItemToOrder\n        }}\n      >\n        <TabsWrapper>\n          <TabsHeader>{renderTabButtons()}</TabsHeader>\n\n          <TabsContent>{renderTabContent()}</TabsContent>\n        </TabsWrapper>\n      </OrdersContext.Provider>\n    </div>\n  );\n}\n\nconst TabsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  width: 40vw;\n  height: 75vh;\n  margin: auto;\n`;\nconst TabsHeader = styled.div`\n  display: flex;\n  margin-bottom: 14px;\n`;\nconst TabsButton = styled.div`\n  background-color: inherit;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  padding: 0.5em 0.75em;\n  transition: 0.3s;\n  border: 1px solid #c9d1d9;\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n  &:hover {\n    color: #999;\n  }\n  &.active {\n    color: #eee !important;\n    font-weight: bold;\n  }\n`;\nconst TabsContent = styled.div`\n  border-top: none;\n`;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = date => {\n    if(typeof date === 'string') date = new Date(date);\n    const d = date.getDate();\n    const m = date.getMonth()+1;\n    const y = date.getFullYear();\n    return `${m < 10 ? `0${m}` : m}-${d < 10 ? `0${d}` : d}-${y}`\n}"],"sourceRoot":""}